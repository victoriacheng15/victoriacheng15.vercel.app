---
import type { GetStaticPaths, Page } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import PageLayout from "@/layouts/Base";
import PostPreview from "@/components/blog/PostPreview";
import Pagination from "@/components/Paginator";
import { getUniqueTags, sortMDByDate } from "@/utils";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	const allPosts = await getCollection("post");
	const allPostsByDate = sortMDByDate(allPosts);
	const uniqueTags = getUniqueTags(allPostsByDate);

	return uniqueTags.flatMap((tag) => {
		const filterPosts = allPostsByDate.filter((post) => post.data.tags.includes(tag));
		return paginate(filterPosts, {
			params: { tag },
			pageSize: 10,
		});
	});
};

interface Props {
	page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;
const { tag } = Astro.params;

const meta = {
	title: `Tag: ${tag}`,
	description: `View all posts with the tag - ${tag}`,
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			url: page.url.prev,
			text: `← Previous Page`,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			url: page.url.next,
			text: `Next Page →`,
		},
	}),
};
---

<PageLayout meta={meta}>
	<h1 class="title mb-6 flex items-center">
		<a href="/tags/" class="text-accent sm:hover:underline">Tags</a><span class="mx-3">→</span>
		<span class="text-xl">#{tag}</span>
	</h1>
	<section aria-label="Blog post list">
		<ul class="space-y-4 pb-4">
			{
				page.data.map((p) => (
					<li class="border-2 rounded-lg border-transparent hover:border-accent p-1 duration-300 ease-in-out">
						<PostPreview post={p} as="h2" />
					</li>
				))
			}
		</ul>
		<Pagination {...paginationProps} />
	</section>
</PageLayout>
